[mcu pico]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66118604B173728-if00

[gcode_button sfs_switch]
pin: pico:gpio10
#   The pin on which the button is connected. This parameter must be
#   provided.
#analog_range:
#   Two comma separated resistances (in Ohms) specifying the minimum
#   and maximum resistance range for the button. If analog_range is
#   provided then the pin must be an analog capable pin. The default
#   is to use digital gpio for the button.
#analog_pullup_resistor:
#   The pullup resistance (in Ohms) when analog_range is specified.
#   The default is 4700 ohms.
press_gcode:
#   A list of G-Code commands to execute when the button is pressed.
#   G-Code templates are supported. This parameter must be provided.
release_gcode:
#   A list of G-Code commands to execute when the button is released.
#   G-Code templates are supported. The default is to not run any
#   commands on a button release.
#debounce_delay:
#   A period of time in seconds to debounce events prior to running the
#   button gcode. If the button is pressed and released during this
#   delay, the entire button press is ignored. Default is 0.


# [filament_switch_sensor sfs_switch]
# switch_pin: pico:gpio10
# pause_on_runout: False
# runout_gcode:
#   M118 SFS Filament switch runout
# #  SET_FILAMENT_SENSOR SENSOR=tangle ENABLE=0
# insert_gcode:
#   M118 SFS Filament switch inserted
# #  SET_FILAMENT_SENSOR SENSOR=tangle ENABLE=1

[gcode_macro switchtest]
gcode:

    {% set sw = printer["gcode_button sfs_switch"].state %}
    M118 sw={sw}
    
    {% if printer["gcode_button sfs_switch"].state == "PRESSED" %}
      M118 pressed
    {% else %}
      M118 {printer["gcode_button sfs_switch"].state}
    {% endif %}  


